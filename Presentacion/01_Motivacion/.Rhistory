source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
vec <- c(6,1,3,6,10,5)
lst <- list(c(1,2),TRUE,c("a","b","c"))
lst
lst[0]
lst[1]
sum(lst[1])
sum(lst[1])
sum(lst[[1])
sum(lst[[1]])
library("ggplot2")
diamonds
diamonds[,6]
diamonds[1:6,]
nrows(diamonds)
nrow(diamonds)
head(diamonds)
tail(diamonds)
qplot(x,y,data=diamonds)
?diamonds
c(1,2,3,4,5) > 3
vec <- c(1,2,3,4,5)
vec[c(1,2,3,4,5) > 3]
vec[vec > 3]
all(z %i% c('monday',"tuesday","wensday"))
all(z %in% c('monday',"tuesday","wensday"))
diamons
diamonds
library("ggplot")
library("ggplot2")
diamonds
x_zero <- diamonds$x == 0
diamonds[x_zero,]
diamonds[!x_zero,]
65/(165*165)
65/(165*165)*100
65/(165*165)
65/(165*165)*100
70/(165*165)*100
70/(165^2)
70/(1.65^2)
iris
plot(iris.$Sepal.Width,iris$Sepal.Length)
plot(iris$Sepal.Width,iris$Sepal.Length)
qplot(iris$Sepal.Width,iris$Sepal.Length)
?mpg
View(mpg)
qplot(disp,hwy, data=mpg)
qplot(displ,hwy, data=mpg)
mpg$hwy
mpg[mpg$hwy=0]
mpg$hwy==รง0
mpg$hwy==0
qplot(displ,hwy, data=mpg,color=class)
qplot(displ,hwy, data=mpg,color=class,size=trans)
qplot(displ,hwy, data=mpg,color=class,shape=trans)
qplot(displ,hwy, data=mpg,color=class,shape=year)
qplot(displ,hwy, data=mpg,color=class,shape=drv)
qplot(displ,hwy, data=mpg)+
facet_grid(drv ~ cyl)
qplot(displ,hwy, data=mpg)+
facet_grid(drv ~ .)
qplot(displ,hwy, data=mpg)+
facet_grid(. ~ cyl)
qplot(displ,hwy, data=mpg)+
facet_wrap( ~ class)
qplot(displ,hwy, data=mpg)+
facet_grid(drv ~ .)
qplot(displ,hwy, data=mpg)+
facet_grid(. ~ cyl)
qplot(displ,hwy, data=mpg)+
facet_grid(drv ~ .)
qplot(displ,hwy,data=mpg,geom=c("smoth"))
qplot(displ,hwy,data=mpg,geom=c("smooth"))
qplot(displ,hwy,data=mpg,geom=c("dot","smooth"))
qplot(displ,hwy,data=mpg,geom=c("point","smooth"))
qplot(displ,hwy,data=mpg,geom=c("point","smooth","box"))
qplot(displ,hwy,data=mpg,geom=c("point","smooth","boxplots"))
qplot(displ,hwy,data=mpg,geom="box")
qplot(displ,hwy,data=mpg,geom="dots")
qplot(displ,hwy,data=mpg,geom="dot")
qplot(displ,hwy,data=mpg,geom="points")
qplot(displ,hwy,data=mpg,geom="point")
qplot(displ,hwy,data=mpg,geom="smooth")
qplot(class,hwy,data=mpg)
qplot(class,hwy,data=mpg,geom="scatter")
qplot(class,hwy,data=mpg,geom="scatte")
qplot(class,hwy,data=mpg,geom="scatterbox")
qplot(class,hwy,data=mpg,geom="scatterplot")
qplot(class,hwy,data=mpg,geom="scatterplot")
qplot(class,hwy,data=mpg,geom="box")
qplot(class,hwy,data=mpg,geom="boxplot")
qplot(class,hwy,data=mpg)
qplot(class,hwy,data=mpg,geom="boxplot")
qplot(reorder(class,hwy),data=mpg,geom="boxplot")
qplot(reorder(class,hwy),hwy,data=mpg,geom="boxplot")
qplot(class,hwy,data=mpg,geom="boxplot")
qplot(reorder(class,hwy),hwy,data=mpg,geom="boxplot")
qplot(reorder(class,hwy,median),hwy,data=mpg,geom="boxplot")
qplot(reorder(class,hwy,FUN=median),hwy,data=mpg,geom="boxplot")
qplot(class,hwy,data=mpg,geom="boxplot")
qplot(reorder(class,hwy,FUN=median),hwy,data=mpg,geom="boxplot")
qplot(x,y,data=diamonds)
qplot(x,z,data=diamonds)
qplot(x,data=diamonds)
qplot(cut,data=diamonds)
qplot(x,data=diamonds)
qplot(x,z,data=diamonds)
ls
dir()
Sys.getlocale()
install.packages(c("swirl", "swirlify"))
install.packages("devtools")
devtools::install_github(c("swirldev/swirl", "swirldev/swirlify"))
Sys.setlocale(category="LC_ALL", locale = "Spanish_Spain.UTF-8")
Sys.getenv("LC_CTYPE")
library(devtools)
Sys.getenv("LC_CTYPE")
Sys.getenv("LC_CTYPE")
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
library("swirl")
swirl()
swirl()
5 + 7
x <- 5 + 7
a
v
X
x
y <- x -3
y
2018*18
z <- c(1.1, 9, 3.14)
218 * 18
install.packages('slidify')
slidify::slidify('index.Rmd')
require(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
setwd("~/ProgrammingEveryone/01_Bienvenida/01_Motivacion")
slidify("index.Rmd")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
library(slidify)
slidify("index.Rmd")
---
```{r setup, cache = F, echo = F, message = F, warning = F, tidy = F}
# make this an external chunk that can be included in any file
options(width = 70)
```{r setup, cache = F, echo = F, message = F, warning = F, tidy = F}
# make this an external chunk that can be included in any file
options(width = 70)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache = T, cache.path = '.cache/', fig.path = 'fig/')
options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
knit_hooks$set(plot = knitr:::hook_plot_html)
